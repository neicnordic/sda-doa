services:
  certfixer:
    command:
      - /bin/sh
      - /scripts/make_certs.sh
    container_name: certfixer
    environment:
      - KEYSTORE_PASSWORD=testingthis
    image: alpine:latest
    volumes:
      - ./scripts:/scripts
      - certs:/certs
      - client_certs:/client_certs
      - /tmp:/temp
      - /test/client_certs:/client_certs

  postgres:
    container_name: postgres
    image: ghcr.io/neicnordic/sensitive-data-archive:PR988-postgres
    depends_on:
      certfixer:
        condition: service_completed_successfully
    ports:
      - 5432:5432
    environment:
      - LEGA_IN_PASSWORD=password
      - LEGA_OUT_PASSWORD=password
      - POSTGRES_PASSWORD=rootpasswd
      - POSTGRES_SERVER_CACERT=/certs/ca.crt
      - POSTGRES_SERVER_CERT=/certs/db.crt
      - POSTGRES_SERVER_KEY=/certs/db.key

    healthcheck:
      test: [ "CMD", "pg_isready", "-h", "localhost", "-U", "lega_out" ]
      interval: 5s
      timeout: 20s
      retries: 3
    volumes:
      - certs:/certs

  mockauth:
    container_name: mockauth
    image: python:3.11-slim
    ports:
      - 8000:8000
    volumes:
      - ./test/mock_auth.py:/mock_auth.py
      - client_certs:/client_certs
    command: >
      sh -c "pip install --upgrade pip && pip install aiohttp Authlib && python -u /mock_auth.py 0.0.0.0 8000"
  


  rabbitmq:
    image: ghcr.io/neicnordic/sensitive-data-archive:PR988-rabbitmq
    container_name: rabbitmq
    depends_on:
      certfixer:
        condition: service_completed_successfully
    environment:
      - RABBITMQ_SERVER_CACERT=/etc/rabbitmq/ssl/ca.crt
      - RABBITMQ_SERVER_CERT=/etc/rabbitmq/ssl/mq.crt
      - RABBITMQ_SERVER_KEY=/etc/rabbitmq/ssl/mq.key
      - RABBITMQ_SERVER_VERIFY=verify_none
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms",
        ]
      interval: 5s
      timeout: 20s
      retries: 3
    restart: always
    volumes:
      - certs:/etc/rabbitmq/ssl/
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - 5671:5671
      - 25671:15671

volumes:
  postgres:
  certs:
  client_certs:
  postgres_data:
  rabbitmq_data:
  shared:
